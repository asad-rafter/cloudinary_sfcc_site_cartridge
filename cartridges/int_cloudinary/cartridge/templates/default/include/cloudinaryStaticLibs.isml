<isset name="preferences" value="${dw.system.Site.current.preferences.custom}" scope="page"/>
<isif condition="${preferences.CLDEnabled}">
    <iscomment>Placeholder to hold cloudinary data sent from controllers and being used in client side js
        to render cloudinary widgets.</iscomment>
    <isif condition="${pdict.cloudinary}">
        <div class="cloudinary-data-container d-none visually-hidden" data-cloudinary="<isprint value="${JSON.stringify(pdict.cloudinary)}" encoding="htmlunquote" />"></div>
    <iselse/>
        <div class="cloudinary-data-container d-none visually-hidden" data-cloudinary="${preferences.CLDCloudName}"></div>
    </isif>
    <script src="${URLUtils.staticURL('/js/cloudinaryWidgets.js')}"></script>
    <isif condition="${pdict.cloudinary && pdict.cloudinary.videoEnabled && pdict.cloudinary.videoPlayerEnabled}">
        <link href="${preferences.CLDVideoPlayerCSSURL}" rel="stylesheet"/>
    </isif>
    <isscript>
        pdict.CLDVideoPlayerJSURL = preferences.CLDVideoPlayerJSURL;
    </isscript>
    <script>
        var CLDVideoPlayerJSURL = JSON.parse('<isprint value="${JSON.stringify(pdict.CLDVideoPlayerJSURL)}" encoding="jsonvalue"/>');
            const script = document.createElement('script');
            script.src = CLDVideoPlayerJSURL;
            document.body.appendChild(script);
            script.onload = () => {
                window.cldVideoPlayer = cloudinary.Cloudinary;
            };
    </script>
    <isset name="CLDImagePageTypeSettings" value="${JSON.parse(preferences.CLDImagePageTypeSettings)}" scope="page"/>
    <isif condition="${(CLDImagePageTypeSettings.miniCart.enabled && CLDImagePageTypeSettings.miniCart.automateResponsivenessWithJS) || (CLDImagePageTypeSettings.searchSuggestions.enabled && CLDImagePageTypeSettings.searchSuggestions.automateResponsivenessWithJS)}">
        <isinclude template="include/cloudinaryShrinkwrap"/>
    </isif>
</isif>
